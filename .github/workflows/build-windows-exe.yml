# .github/workflows/build-windows-exe.yml

name: Build Windows EXE

# This action triggers on every push to the 'main' branch.
on:
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Build executable with PyInstaller
        run: poetry run pyinstaller --name docling --onefile docling/cli.py

      - name: Upload EXE as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: docling-windows-exe
          path: dist/docling.exe